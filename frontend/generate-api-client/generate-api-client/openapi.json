{
  "openapi": "3.1.0",
  "info": {
    "title": "DataBase NinjaExtra API | Local ",
    "version": "1.0.0",
    "description": ""
  },
  "paths": {
    "/api/token/pair": {
      "post": {
        "operationId": "token_obtain_pair",
        "summary": "Obtain Token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPairOutputSchema"
                }
              }
            }
          }
        },
        "tags": ["token"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPairInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/token/refresh": {
      "post": {
        "operationId": "token_refresh",
        "summary": "Refresh Token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefreshOutputSchema"
                }
              }
            }
          }
        },
        "tags": ["token"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/token/verify": {
      "post": {
        "operationId": "token_verify",
        "summary": "Verify Token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Schema" }
              }
            }
          }
        },
        "tags": ["token"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/user": {
      "get": {
        "operationId": "api_user_router_get_users",
        "summary": "Get Users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserList" }
              }
            }
          }
        },
        "tags": ["user"]
      },
      "post": {
        "operationId": "api_user_router_create_user",
        "summary": "Create User",
        "parameters": [],
        "responses": { "200": { "description": "OK" } },
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserIn" }
            }
          },
          "required": true
        }
      }
    },
    "/api/user/{uuid}": {
      "get": {
        "operationId": "api_user_router_get_user",
        "summary": "Get User",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOut" }
              }
            }
          }
        },
        "tags": ["user"]
      },
      "put": {
        "operationId": "api_user_router_update_user",
        "summary": "Update User",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserPut" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      },
      "delete": {
        "operationId": "api_user_router_delete_user",
        "summary": "Delete User",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["user"],
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/user/password/{uuid}": {
      "put": {
        "operationId": "api_user_router_update_user_password",
        "summary": "Update User Password",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserPutPassword" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/user/group/get": {
      "get": {
        "operationId": "api_user_router_get_user_groups",
        "summary": "Get User Groups",
        "parameters": [],
        "responses": { "200": { "description": "OK" } },
        "tags": ["user"],
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/user/group/get/{uuid}": {
      "get": {
        "operationId": "api_user_router_get_user_group",
        "summary": "Get User Group",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["user"],
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/user/group/add/{uuid}": {
      "post": {
        "operationId": "api_user_router_add_user_group",
        "summary": "Add User Group",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserGroup" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/user/group/remove/{uuid}": {
      "post": {
        "operationId": "api_user_router_remove_user_group",
        "summary": "Remove User Group",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserGroup" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/group": {
      "get": {
        "operationId": "api_user_group_router_get_groups",
        "summary": "Get Groups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GroupList" }
              }
            }
          }
        },
        "tags": ["group"]
      },
      "post": {
        "operationId": "api_user_group_router_create_group",
        "summary": "Create Group",
        "parameters": [],
        "responses": { "200": { "description": "OK" } },
        "tags": ["group"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GroupIn" }
            }
          },
          "required": true
        }
      }
    },
    "/api/group/{uuid}": {
      "get": {
        "operationId": "api_user_group_router_get_group",
        "summary": "Get Group",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "title": "Uuid", "type": "integer" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GroupOut" }
              }
            }
          }
        },
        "tags": ["group"]
      },
      "put": {
        "operationId": "api_user_group_router_update_group",
        "summary": "Update Group",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "title": "Uuid", "type": "integer" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["group"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GroupPut" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      },
      "delete": {
        "operationId": "api_user_group_router_delete_group",
        "summary": "Delete Group",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "title": "Uuid", "type": "integer" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["group"],
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/transaction": {
      "get": {
        "operationId": "api_transaction_router_get_transactions",
        "summary": "Get Transactions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TransactionList" }
              }
            }
          }
        },
        "tags": ["transaction"],
        "security": [{ "JWTAuth": [] }]
      },
      "post": {
        "operationId": "api_transaction_router_create_transaction",
        "summary": "Create Transaction",
        "parameters": [],
        "responses": { "200": { "description": "OK" } },
        "tags": ["transaction"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TransactionIn" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/transaction/{uuid}": {
      "get": {
        "operationId": "api_transaction_router_get_transaction",
        "summary": "Get Transaction",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TransactionOut" }
              }
            }
          }
        },
        "tags": ["transaction"],
        "security": [{ "JWTAuth": [] }]
      },
      "put": {
        "operationId": "api_transaction_router_update_transaction",
        "summary": "Update Transaction",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["transaction"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TransactionIn" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      },
      "delete": {
        "operationId": "api_transaction_router_delete_transaction",
        "summary": "Delete Transaction",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["transaction"],
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/transaction/download/csv": {
      "post": {
        "operationId": "api_transaction_router_download_transaction_csv",
        "summary": "Download Transaction Csv",
        "parameters": [],
        "responses": { "200": { "description": "OK" } },
        "tags": ["transaction"],
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/todo": {
      "get": {
        "operationId": "api_todo_router_get_todos",
        "summary": "Get Todos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ToDoList" }
              }
            }
          }
        },
        "tags": ["todo"],
        "security": [{ "JWTAuth": [] }]
      },
      "post": {
        "operationId": "api_todo_router_create_todo",
        "summary": "Create Todo",
        "parameters": [],
        "responses": { "200": { "description": "OK" } },
        "tags": ["todo"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ToDoIn" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/todo/{uuid}": {
      "get": {
        "operationId": "api_todo_router_get_todo",
        "summary": "Get Todo",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ToDoOut" }
              }
            }
          }
        },
        "tags": ["todo"],
        "security": [{ "JWTAuth": [] }]
      },
      "put": {
        "operationId": "api_todo_router_update_todo",
        "summary": "Update Todo",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["todo"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ToDoIn" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      },
      "delete": {
        "operationId": "api_todo_router_delete_todo",
        "summary": "Delete Todo",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["todo"],
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/todo/done/{uuid}": {
      "put": {
        "operationId": "api_todo_router_update_todo_done",
        "summary": "Update Todo Done",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": { "format": "uuid", "title": "Uuid", "type": "string" },
            "required": true
          }
        ],
        "responses": { "200": { "description": "OK" } },
        "tags": ["todo"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ToDoDone" }
            }
          },
          "required": true
        },
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/todo/download/csv": {
      "post": {
        "operationId": "api_todo_router_download_todo_csv",
        "summary": "Download Todo Csv",
        "parameters": [],
        "responses": { "200": { "description": "OK" } },
        "tags": ["todo"],
        "security": [{ "JWTAuth": [] }]
      }
    },
    "/api/translate/cn2t": {
      "post": {
        "operationId": "api_translate_router_cn2t",
        "summary": "Cn2T",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TranslateOut" }
              }
            }
          }
        },
        "tags": ["translate"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TranslateIn" }
            }
          },
          "required": true
        }
      }
    },
    "/api/translate/t2cn": {
      "post": {
        "operationId": "api_translate_router_t2cn",
        "summary": "T2Cn",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TranslateOut" }
              }
            }
          }
        },
        "tags": ["translate"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TranslateIn" }
            }
          },
          "required": true
        }
      }
    },
    "/api/translate/en2t": {
      "post": {
        "operationId": "api_translate_router_en2t",
        "summary": "En2T",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TranslateOut" }
              }
            }
          }
        },
        "tags": ["translate"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TranslateIn" }
            }
          },
          "required": true
        }
      }
    },
    "/api/translate/t2en": {
      "post": {
        "operationId": "api_translate_router_t2en",
        "summary": "T2En",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TranslateOut" }
              }
            }
          }
        },
        "tags": ["translate"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TranslateIn" }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TokenObtainPairOutputSchema": {
        "properties": {
          "username": {
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "maxLength": 150,
            "title": "Username",
            "type": "string"
          },
          "refresh": { "title": "Refresh", "type": "string" },
          "access": { "title": "Access", "type": "string" }
        },
        "required": ["username", "refresh", "access"],
        "title": "TokenObtainPairOutputSchema",
        "type": "object"
      },
      "TokenObtainPairInputSchema": {
        "properties": {
          "password": {
            "maxLength": 128,
            "title": "Password",
            "type": "string"
          },
          "username": {
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "maxLength": 150,
            "title": "Username",
            "type": "string"
          }
        },
        "required": ["password", "username"],
        "title": "TokenObtainPairInputSchema",
        "type": "object"
      },
      "TokenRefreshOutputSchema": {
        "properties": {
          "refresh": { "title": "Refresh", "type": "string" },
          "access": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Access"
          }
        },
        "required": ["refresh", "access"],
        "title": "TokenRefreshOutputSchema",
        "type": "object"
      },
      "TokenRefreshInputSchema": {
        "properties": { "refresh": { "title": "Refresh", "type": "string" } },
        "required": ["refresh"],
        "title": "TokenRefreshInputSchema",
        "type": "object"
      },
      "Schema": { "properties": {}, "title": "Schema", "type": "object" },
      "TokenVerifyInputSchema": {
        "properties": { "token": { "title": "Token", "type": "string" } },
        "required": ["token"],
        "title": "TokenVerifyInputSchema",
        "type": "object"
      },
      "UserList": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/UserOut" },
            "title": "Data",
            "type": "array"
          }
        },
        "required": ["data"],
        "title": "UserList",
        "type": "object"
      },
      "UserOut": {
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "uuid": { "format": "uuid", "title": "Uuid", "type": "string" },
          "username": { "title": "Username", "type": "string" },
          "email": { "title": "Email", "type": "string" }
        },
        "required": ["id", "uuid", "username", "email"],
        "title": "UserOut",
        "type": "object"
      },
      "UserIn": {
        "properties": {
          "username": { "title": "Username", "type": "string" },
          "password": { "title": "Password", "type": "string" }
        },
        "required": ["username", "password"],
        "title": "UserIn",
        "type": "object"
      },
      "UserPut": {
        "properties": { "username": { "title": "Username", "type": "string" } },
        "required": ["username"],
        "title": "UserPut",
        "type": "object"
      },
      "UserPutPassword": {
        "properties": { "password": { "title": "Password", "type": "string" } },
        "required": ["password"],
        "title": "UserPutPassword",
        "type": "object"
      },
      "UserGroup": {
        "properties": { "id": { "title": "Id", "type": "integer" } },
        "required": ["id"],
        "title": "UserGroup",
        "type": "object"
      },
      "GroupList": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/GroupOut" },
            "title": "Data",
            "type": "array"
          }
        },
        "required": ["data"],
        "title": "GroupList",
        "type": "object"
      },
      "GroupOut": {
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "name": { "title": "Name", "type": "string" }
        },
        "required": ["id", "name"],
        "title": "GroupOut",
        "type": "object"
      },
      "GroupIn": {
        "properties": { "name": { "title": "Name", "type": "string" } },
        "required": ["name"],
        "title": "GroupIn",
        "type": "object"
      },
      "GroupPut": {
        "properties": { "name": { "title": "Name", "type": "string" } },
        "required": ["name"],
        "title": "GroupPut",
        "type": "object"
      },
      "TransactionList": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/TransactionOut" },
            "title": "Data",
            "type": "array"
          }
        },
        "required": ["data"],
        "title": "TransactionList",
        "type": "object"
      },
      "TransactionOut": {
        "properties": {
          "uuid": { "format": "uuid", "title": "Uuid", "type": "string" },
          "user_uuid": {
            "format": "uuid",
            "title": "User Uuid",
            "type": "string"
          },
          "datetime": {
            "format": "date-time",
            "title": "Datetime",
            "type": "string"
          },
          "label": { "title": "Label", "type": "string" },
          "price": { "title": "Price", "type": "number" }
        },
        "required": ["uuid", "user_uuid", "datetime", "label", "price"],
        "title": "TransactionOut",
        "type": "object"
      },
      "TransactionIn": {
        "properties": {
          "datetime": { "title": "Datetime", "type": "string" },
          "label": { "title": "Label", "type": "string" },
          "price": { "title": "Price", "type": "number" }
        },
        "required": ["datetime", "label", "price"],
        "title": "TransactionIn",
        "type": "object"
      },
      "ToDoList": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ToDoOut" },
            "title": "Data",
            "type": "array"
          }
        },
        "required": ["data"],
        "title": "ToDoList",
        "type": "object"
      },
      "ToDoOut": {
        "properties": {
          "uuid": { "format": "uuid", "title": "Uuid", "type": "string" },
          "user_uuid": {
            "format": "uuid",
            "title": "User Uuid",
            "type": "string"
          },
          "datetime": {
            "format": "date-time",
            "title": "Datetime",
            "type": "string"
          },
          "label": { "title": "Label", "type": "string" },
          "done": { "title": "Done", "type": "boolean" }
        },
        "required": ["uuid", "user_uuid", "datetime", "label", "done"],
        "title": "ToDoOut",
        "type": "object"
      },
      "ToDoIn": {
        "properties": {
          "datetime": { "title": "Datetime", "type": "string" },
          "label": { "title": "Label", "type": "string" }
        },
        "required": ["datetime", "label"],
        "title": "ToDoIn",
        "type": "object"
      },
      "ToDoDone": {
        "properties": { "done": { "title": "Done", "type": "boolean" } },
        "required": ["done"],
        "title": "ToDoDone",
        "type": "object"
      },
      "TranslateOut": {
        "properties": { "data": { "title": "Data", "type": "string" } },
        "required": ["data"],
        "title": "TranslateOut",
        "type": "object"
      },
      "TranslateIn": {
        "properties": { "data": { "title": "Data", "type": "string" } },
        "required": ["data"],
        "title": "TranslateIn",
        "type": "object"
      }
    },
    "securitySchemes": { "JWTAuth": { "type": "http", "scheme": "bearer" } }
  },
  "servers": []
}
